import { useLiveQuery } from "dexie-react-hooks";
import type { NextPage } from "next";
import Head from "next/head";
import { db } from "../database.config";

const CreateUser: NextPage = () => {
  const users = useLiveQuery(() => db.users.toArray());

  const createUser = async (e: React.FormEvent<HTMLFormElement>) => {
    try {
      e.preventDefault();
      const formData = new FormData(e.currentTarget);
      const data = Object.fromEntries(formData.entries());
      e.currentTarget.reset();

      const id = await db.users.add({
        email: data.email.toString(),
        password: data.password.toString(),
      });

      console.log("User created with id: ", id);
      alert("Ususaio creado con el id: " + id);
    } catch (error) {
      console.log(error);
      alert("Error al crear el usuario");
    }
  };

  const deleteUser = async (id: number | undefined) => {
    try {
      if (id) {
        //confirmar
        const confirm = window.confirm("¿Estas seguro de eliminar el usuario?");
        if (confirm) {
          await db.users.delete(id);
          alert("Usuario eliminado con el id: " + id);
          console.log("User deleted with id: ", id);
        }
      }
    } catch (error) {
      alert("Error al eliminar el usuario con el id: " + id);
      console.log(error);
    }
  };

  return (
    <div>
      <Head>
        <title>The Safest.net</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="w-screen h-screen flex flex-col bg-white">
        <header className="w-full h-20 bg-orange-600 flex justify-center items-center">
          <h1 className="text-3xl text-white">The Safest.net</h1>
        </header>

        <div className="flex justify-between gap-8 max-w-screen-2xl mx-auto p-4 overflow-hidden">
          <form
            action="POST"
            onSubmit={createUser}
            className="flex flex-col gap-4"
          >
            <fieldset className="flex flex-col gap-2">
              <legend className="text-black text-2xl my-3">
                Crear Usuario
              </legend>
              <div className="flex flex-col space-y-2">
                <label className="text-sm font-light" htmlFor="email">
                  Email
                </label>
                <input
                  className="w-96 px-3 py-2 rounded-md border border-slate-400"
                  type="email"
                  required
                  placeholder="Your Email"
                  name="email"
                  id="email"
                />
              </div>
              <div className="flex flex-col space-y-2">
                <label className="text-sm font-light" htmlFor="password">
                  Contraseña
                </label>
                <input
                  className="w-96 px-3 py-2 rounded-md border border-slate-400"
                  type="password"
                  required
                  placeholder="Your Password"
                  name="password"
                  id="password"
                />
              </div>
            </fieldset>
            <button
              className="w-full px-10 py-2 bg-blue-600 text-white rounded-md
              hover:bg-blue-500 hover:drop-shadow-md duration-300 ease-in"
              type="submit"
            >
              Crear
            </button>
          </form>
          <div className="flex flex-col">
            <h1 className="text-2xl text-center mb-4">Lista de usuarios</h1>
            <div className="flex flex-col flex-1 overflow-y-auto">
              <table className="table-auto">
                <thead>
                  <tr>
                    <th className="px-4 py-2">ID</th>
                    <th className="px-4 py-2">Email</th>
                    <th className="px-4 py-2">Password</th>
                    <th className="px-4 py-2">Acciones</th>
                  </tr>
                </thead>
                <tbody>
                  {users?.map((user) => (
                    <tr key={user.id}>
                      <td className="border px-4 py-2">{user.id}</td>
                      <td className="border px-4 py-2">{user.email}</td>
                      <td className="border px-4 py-2">{user.password}</td>
                      <td className="border px-4 py-2">
                        <button
                          className="p-1 bg-red-500 text-white rounded "
                          onClick={() => deleteUser(user.id)}
                        >
                          Eliminar
                        </button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CreateUser;
